name: Update Repository

on:
  push:
    branches:
      - main
    paths:
      - 'apt/pool/**'
      - 'Formula/**'
      - 'manifests/**'
  workflow_dispatch:

jobs:
  update-apt-repository:
    name: Update APT Repository
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'apt/pool/') || contains(github.event.head_commit.added, 'apt/pool/') }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.APT_GPG_PRIVATE_KEY }}
        run: |
          if [ -n "$GPG_PRIVATE_KEY" ]; then
            mkdir -p .gnupg
            echo "$GPG_PRIVATE_KEY" > .gnupg/private-key.asc
            chmod 600 .gnupg/private-key.asc
          else
            echo "Warning: GPG private key not set. Repository will not be signed securely."
          fi

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev apt-utils gnupg

      - name: Update APT Repository
        run: ./scripts/update-apt-repository.sh

      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add apt/dists/ docs/KEY.gpg

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update APT repository metadata"
            git push
          fi

  deploy-to-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: update-apt-repository
    if: always() && needs.update-apt-repository.result != 'failure'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Make sure Jekyll doesn't process APT repository
        run: |
          # Ensure .nojekyll files exist
          touch .nojekyll
          touch apt/.nojekyll

          # Create docs directory if it doesn't exist
          mkdir -p docs/images

          # Copy KEY.gpg to docs if it exists
          if [ -f docs/KEY.gpg ]; then
            cp docs/KEY.gpg docs/KEY.gpg.bak
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
